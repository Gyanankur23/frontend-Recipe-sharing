{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\RSP\\\\frontend\\\\src\\\\pages\\\\Comments.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = ({\n  recipeId\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const fetchComments = () => {\n    axios.get(`http://localhost:3000/comments?recipeId=${recipeId}`).then(response => {\n      setComments(response.data);\n    }).catch(error => {\n      console.error('Error fetching comments:', error);\n    });\n  };\n  const handleAddComment = () => {\n    axios.post(`http://localhost:3000/comments`, {\n      recipeId,\n      text: newComment\n    }).then(response => {\n      setComments([...comments, response.data]);\n      setNewComment('');\n    }).catch(error => {\n      console.error('Error adding comment:', error);\n    });\n  };\n  useEffect(() => {\n    fetchComments();\n  }, [recipeId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: comment.text\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newComment,\n      onChange: e => setNewComment(e.target.value),\n      placeholder: \"Add a comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddComment,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"MxCDS9ewhkO9e8lz5YjyzEXdntQ=\");\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Comments","recipeId","_s","comments","setComments","newComment","setNewComment","fetchComments","get","then","response","data","catch","error","console","handleAddComment","post","text","children","fileName","_jsxFileName","lineNumber","columnNumber","map","comment","id","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/RSP/frontend/src/pages/Comments.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Comments = ({ recipeId }) => {\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n\r\n  const fetchComments = () => {\r\n    axios.get(`http://localhost:3000/comments?recipeId=${recipeId}`)\r\n      .then(response => {\r\n        setComments(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching comments:', error);\r\n      });\r\n  };\r\n\r\n  const handleAddComment = () => {\r\n    axios.post(`http://localhost:3000/comments`, { recipeId, text: newComment })\r\n      .then(response => {\r\n        setComments([...comments, response.data]);\r\n        setNewComment('');\r\n      })\r\n      .catch(error => {\r\n        console.error('Error adding comment:', error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchComments();\r\n  }, [recipeId]);\r\n\r\n  return (\r\n    <div>\r\n      <h3>Comments</h3>\r\n      <ul>\r\n        {comments.map(comment => (\r\n          <li key={comment.id}>{comment.text}</li>\r\n        ))}\r\n      </ul>\r\n      <input\r\n        type=\"text\"\r\n        value={newComment}\r\n        onChange={(e) => setNewComment(e.target.value)}\r\n        placeholder=\"Add a comment\"\r\n      />\r\n      <button onClick={handleAddComment}>Submit</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMY,aAAa,GAAGA,CAAA,KAAM;IAC1BV,KAAK,CAACW,GAAG,CAAC,2CAA2CP,QAAQ,EAAE,CAAC,CAC7DQ,IAAI,CAACC,QAAQ,IAAI;MAChBN,WAAW,CAACM,QAAQ,CAACC,IAAI,CAAC;IAC5B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD,CAAC,CAAC;EACN,CAAC;EAED,MAAME,gBAAgB,GAAGA,CAAA,KAAM;IAC7BlB,KAAK,CAACmB,IAAI,CAAC,gCAAgC,EAAE;MAAEf,QAAQ;MAAEgB,IAAI,EAAEZ;IAAW,CAAC,CAAC,CACzEI,IAAI,CAACC,QAAQ,IAAI;MAChBN,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEO,QAAQ,CAACC,IAAI,CAAC,CAAC;MACzCL,aAAa,CAAC,EAAE,CAAC;IACnB,CAAC,CAAC,CACDM,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EACN,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACdW,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,oBACEF,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBvB,OAAA;MAAAmB,QAAA,EACGf,QAAQ,CAACoB,GAAG,CAACC,OAAO,iBACnBzB,OAAA;QAAAmB,QAAA,EAAsBM,OAAO,CAACP;MAAI,GAAzBO,OAAO,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoB,CACxC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLvB,OAAA;MACE2B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEtB,UAAW;MAClBuB,QAAQ,EAAGC,CAAC,IAAKvB,aAAa,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CI,WAAW,EAAC;IAAe;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACFvB,OAAA;MAAQiC,OAAO,EAAEjB,gBAAiB;MAAAG,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV,CAAC;AAACpB,EAAA,CA9CIF,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AAgDd,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}